#!/usr/bin/env python3
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

from setuptools import setup
from setuptools.command.build_py import build_py
from setuptools.extern.packaging.version import InvalidVersion
from os.path import join
from os import environ

"""Install public packages and scripts for Qpid Dispatch."""


class BuildPy(build_py):
    """Extend standard build command, add generated modules from binary directory."""

    MODULES = ['skupper_router_site.py']

    def run(self):
        build_py.run(self)      # Run the standard build, copies source .py files into builddir
        for m in self.MODULES:
            build_py.copy_file(self, join('${CMAKE_CURRENT_BINARY_DIR}', m), join(self.build_lib, m))

    def get_outputs(self, **kwargs):
        return build_py.get_outputs(self, **kwargs) + [join(self.build_lib, m) for m in self.MODULES]


options = {}
destdir = environ.get("DESTDIR")
if destdir:
    options["install"] = {"root": destdir}

try:
    setup(
        options=options,
        name='skupper_router',
        description='Skupper Router tools and libraries.',
        package_dir={'' : '${CMAKE_SOURCE_DIR}/python'},
        packages=['skupper_router', 'skupper_router.management'],
        package_data={'skupper_router.management': ['*.json']},
        cmdclass={'build_py': BuildPy},
        version='${QPID_DISPATCH_VERSION}',
        author='Skupper Project',
        author_email='skupper@googlegroups.com',
        url='https://skupper.io/',
        license='Apache Software License',
        zip_safe=False,
    )
except InvalidVersion:
    # When on a branch, and no version is provided via the -DVERSION, the router's version is set to
    # commit-sha(<branch-name>), e.g. 2gf3445634mndfkgfh(main)
    # That version is no PEP-440 compatible and so setuptools fails the build.
    # We are catching the InvalidVersion error and not passing in a version
    # The router's version can be obtained via skrouterd --version
    # What is the reason to provide version here ?
    setup(
        options=options,
        name='skupper_router',
        description='Skupper Router tools and libraries.',
        package_dir={'': '${CMAKE_SOURCE_DIR}/python'},
        packages=['skupper_router', 'skupper_router.management'],
        package_data={'skupper_router.management': ['*.json']},
        cmdclass={'build_py': BuildPy},
        author='Skupper Project',
        author_email='skupper@googlegroups.com',
        url='https://skupper.io/',
        license='Apache Software License',
        zip_safe=False,
    )

